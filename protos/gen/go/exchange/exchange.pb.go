// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: exchange/exchange.proto

// Текущий пакет - указывает пространство имен для сервиса и сообщений. Помогает избегать конфликтов имен.

package walletv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Запрос для получения курса обмена для конкретной валюты
type CurrencyRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FromCurrency  string                 `protobuf:"bytes,1,opt,name=from_currency,json=fromCurrency,proto3" json:"from_currency,omitempty"`
	ToCurrency    string                 `protobuf:"bytes,2,opt,name=to_currency,json=toCurrency,proto3" json:"to_currency,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CurrencyRequest) Reset() {
	*x = CurrencyRequest{}
	mi := &file_exchange_exchange_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CurrencyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CurrencyRequest) ProtoMessage() {}

func (x *CurrencyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_exchange_exchange_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CurrencyRequest.ProtoReflect.Descriptor instead.
func (*CurrencyRequest) Descriptor() ([]byte, []int) {
	return file_exchange_exchange_proto_rawDescGZIP(), []int{0}
}

func (x *CurrencyRequest) GetFromCurrency() string {
	if x != nil {
		return x.FromCurrency
	}
	return ""
}

func (x *CurrencyRequest) GetToCurrency() string {
	if x != nil {
		return x.ToCurrency
	}
	return ""
}

// Ответ с курсом обмена для конкретной валюты
type ExchangeRateResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FromCurrency  string                 `protobuf:"bytes,1,opt,name=from_currency,json=fromCurrency,proto3" json:"from_currency,omitempty"`
	ToCurrency    string                 `protobuf:"bytes,2,opt,name=to_currency,json=toCurrency,proto3" json:"to_currency,omitempty"`
	Rate          float32                `protobuf:"fixed32,3,opt,name=rate,proto3" json:"rate,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExchangeRateResponse) Reset() {
	*x = ExchangeRateResponse{}
	mi := &file_exchange_exchange_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExchangeRateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExchangeRateResponse) ProtoMessage() {}

func (x *ExchangeRateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_exchange_exchange_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExchangeRateResponse.ProtoReflect.Descriptor instead.
func (*ExchangeRateResponse) Descriptor() ([]byte, []int) {
	return file_exchange_exchange_proto_rawDescGZIP(), []int{1}
}

func (x *ExchangeRateResponse) GetFromCurrency() string {
	if x != nil {
		return x.FromCurrency
	}
	return ""
}

func (x *ExchangeRateResponse) GetToCurrency() string {
	if x != nil {
		return x.ToCurrency
	}
	return ""
}

func (x *ExchangeRateResponse) GetRate() float32 {
	if x != nil {
		return x.Rate
	}
	return 0
}

// Ответ с курсами обмена всех валют
type ExchangeRatesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Rates         map[string]float32     `protobuf:"bytes,1,rep,name=rates,proto3" json:"rates,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"fixed32,2,opt,name=value"` // ключ: валюта, значение: курс
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExchangeRatesResponse) Reset() {
	*x = ExchangeRatesResponse{}
	mi := &file_exchange_exchange_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExchangeRatesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExchangeRatesResponse) ProtoMessage() {}

func (x *ExchangeRatesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_exchange_exchange_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExchangeRatesResponse.ProtoReflect.Descriptor instead.
func (*ExchangeRatesResponse) Descriptor() ([]byte, []int) {
	return file_exchange_exchange_proto_rawDescGZIP(), []int{2}
}

func (x *ExchangeRatesResponse) GetRates() map[string]float32 {
	if x != nil {
		return x.Rates
	}
	return nil
}

// Пустое сообщение
type Empty struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Empty) Reset() {
	*x = Empty{}
	mi := &file_exchange_exchange_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_exchange_exchange_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_exchange_exchange_proto_rawDescGZIP(), []int{3}
}

var File_exchange_exchange_proto protoreflect.FileDescriptor

const file_exchange_exchange_proto_rawDesc = "" +
	"\n" +
	"\x17exchange/exchange.proto\x12\bexchange\"W\n" +
	"\x0fCurrencyRequest\x12#\n" +
	"\rfrom_currency\x18\x01 \x01(\tR\ffromCurrency\x12\x1f\n" +
	"\vto_currency\x18\x02 \x01(\tR\n" +
	"toCurrency\"p\n" +
	"\x14ExchangeRateResponse\x12#\n" +
	"\rfrom_currency\x18\x01 \x01(\tR\ffromCurrency\x12\x1f\n" +
	"\vto_currency\x18\x02 \x01(\tR\n" +
	"toCurrency\x12\x12\n" +
	"\x04rate\x18\x03 \x01(\x02R\x04rate\"\x93\x01\n" +
	"\x15ExchangeRatesResponse\x12@\n" +
	"\x05rates\x18\x01 \x03(\v2*.exchange.ExchangeRatesResponse.RatesEntryR\x05rates\x1a8\n" +
	"\n" +
	"RatesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x02R\x05value:\x028\x01\"\a\n" +
	"\x05Empty2\xb0\x01\n" +
	"\x0fExchangeService\x12D\n" +
	"\x10GetExchangeRates\x12\x0f.exchange.Empty\x1a\x1f.exchange.ExchangeRatesResponse\x12W\n" +
	"\x1aGetExchangeRateForCurrency\x12\x19.exchange.CurrencyRequest\x1a\x1e.exchange.ExchangeRateResponseB\x1aZ\x18maxim.wallet.v1;walletv1b\x06proto3"

var (
	file_exchange_exchange_proto_rawDescOnce sync.Once
	file_exchange_exchange_proto_rawDescData []byte
)

func file_exchange_exchange_proto_rawDescGZIP() []byte {
	file_exchange_exchange_proto_rawDescOnce.Do(func() {
		file_exchange_exchange_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_exchange_exchange_proto_rawDesc), len(file_exchange_exchange_proto_rawDesc)))
	})
	return file_exchange_exchange_proto_rawDescData
}

var file_exchange_exchange_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_exchange_exchange_proto_goTypes = []any{
	(*CurrencyRequest)(nil),       // 0: exchange.CurrencyRequest
	(*ExchangeRateResponse)(nil),  // 1: exchange.ExchangeRateResponse
	(*ExchangeRatesResponse)(nil), // 2: exchange.ExchangeRatesResponse
	(*Empty)(nil),                 // 3: exchange.Empty
	nil,                           // 4: exchange.ExchangeRatesResponse.RatesEntry
}
var file_exchange_exchange_proto_depIdxs = []int32{
	4, // 0: exchange.ExchangeRatesResponse.rates:type_name -> exchange.ExchangeRatesResponse.RatesEntry
	3, // 1: exchange.ExchangeService.GetExchangeRates:input_type -> exchange.Empty
	0, // 2: exchange.ExchangeService.GetExchangeRateForCurrency:input_type -> exchange.CurrencyRequest
	2, // 3: exchange.ExchangeService.GetExchangeRates:output_type -> exchange.ExchangeRatesResponse
	1, // 4: exchange.ExchangeService.GetExchangeRateForCurrency:output_type -> exchange.ExchangeRateResponse
	3, // [3:5] is the sub-list for method output_type
	1, // [1:3] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_exchange_exchange_proto_init() }
func file_exchange_exchange_proto_init() {
	if File_exchange_exchange_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_exchange_exchange_proto_rawDesc), len(file_exchange_exchange_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_exchange_exchange_proto_goTypes,
		DependencyIndexes: file_exchange_exchange_proto_depIdxs,
		MessageInfos:      file_exchange_exchange_proto_msgTypes,
	}.Build()
	File_exchange_exchange_proto = out.File
	file_exchange_exchange_proto_goTypes = nil
	file_exchange_exchange_proto_depIdxs = nil
}
